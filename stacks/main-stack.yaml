AWSTemplateFormatVersion: "2010-09-09"
Description: Main Stack

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
    Description: The CIDR block for the VPC

  PublicSubnet1Cidr:
    Type: String
    Default: 10.0.1.0/24
    Description: The CIDR block for the first public subnet

  PublicSubnet2Cidr:
    Type: String
    Default: 10.0.2.0/24
    Description: The CIDR block for the second public subnet

  PrivateSubnetCidr:
    Type: String
    Default: 10.0.3.0/24
    Description: The CIDR block for the private subnet

  MyPublicIP:
    Type: String
    Default: 188.26.211.60/32
    Description: My public IP for allow connections to my INFRA

  PrivateNetworkIp:
    Type: String
    Default: 10.0.0.0/8
    Description: Allow SSH connection from the bastion to the auto-scaling group

  InstanceType:
    Type: String
    Default: t2.micro
    Description: EC2 instance type

  KeyName:
    Type: String
    Description: Name of the EC2 Key Pair

  S3BucketPrefix:
    Type: String
    Description: The S3 bucket prefix where the templates are stored

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/vpc-template.yaml
      Parameters:
        VpcCidr: !Ref VpcCidr

  SubnetStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/subnets-template.yaml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VpcId
        PublicSubnet1Cidr: !Ref PublicSubnet1Cidr
        PublicSubnet2Cidr: !Ref PublicSubnet2Cidr
        PrivateSubnetCidr: !Ref PrivateSubnetCidr
        InternetGatewayId: !GetAtt VPCStack.Outputs.InternetGatewayId

  ALBGroupSecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/alb-security-group-template.yaml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VpcId
        MyIP: !Ref MyPublicIP
        PrivateNetworkIp: !Ref PrivateNetworkIp

  EC2GroupSecurityStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/ec2-security-template.yaml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VpcId
        ALBSecurityGroupId: !GetAtt ALBGroupSecurityStack.Outputs.ALBSecurityGroupId

  LoadBalancerStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/alb-template.yaml
      Parameters:
        VPCId: !GetAtt VPCStack.Outputs.VpcId
        PublicSubnetId1: !GetAtt SubnetStack.Outputs.PublicSubnetId1
        PublicSubnetId2: !GetAtt SubnetStack.Outputs.PublicSubnetId2
        ALBSecurityGroupId: !GetAtt ALBGroupSecurityStack.Outputs.ALBSecurityGroupId

  AutoScalingGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/auto-escaling-group-template.yaml
      Parameters:
        PrivateSubnetId: !GetAtt SubnetStack.Outputs.PrivateSubnetId
        EC2SecurityGroupId: !GetAtt EC2GroupSecurityStack.Outputs.EC2SecurityGroupId
        TargetGroupArn: !GetAtt LoadBalancerStack.Outputs.TargetGroupArn
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName

  EC2InstanceBastionStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.amazonaws.com/${S3BucketPrefix}/ec2-template.yaml
      Parameters:
        SubnetId: !GetAtt SubnetStack.Outputs.PublicSubnetId1
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        SecurityGroupId: !GetAtt EC2GroupSecurityStack.Outputs.EC2SecurityGroupId

Outputs:
  VpcId:
    Description: The ID of the VPC
    Value: !GetAtt VPCStack.Outputs.VpcId

  PrivateSubnetId:
    Description: The ID of the private subnet
    Value: !GetAtt SubnetStack.Outputs.PrivateSubnetId

  PublicSubnetId1:
    Description: The ID of the first public subnet
    Value: !GetAtt SubnetStack.Outputs.PublicSubnetId1

  PublicSubnetId2:
    Description: The ID of the second public subnet
    Value: !GetAtt SubnetStack.Outputs.PublicSubnetId2

  ALBGroupSecurityId:
    Value: !GetAtt ALBGroupSecurityStack.Outputs.ALBSecurityGroupId

  BastionPublicIP:
    Description: The Public IP of the Bastion instance
    Value: !GetAtt EC2InstanceBastionStack.Outputs.BastionPublicIP

  LoadBalancerDNSName:
    Description: The DNS name of the Load Balancer with port 8080
    Value: !Sub "http://${LoadBalancerStack.Outputs.LoadBalancerDNSName}:8080"
